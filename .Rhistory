ISLR2::College
mydata
mydata()
library(ISLR2)
mydata <- ISLR2::Auto
mydata
library(ISLR2)
mydata <- ISLR2::Auto
mydata
library(ISLR2)
mydata <- ISLR2::Auto
model <- lm(mpg~., data=mydata)
summary(model)
informs <- read.csv("D:\ADTA 5410 DEPLOYMENT\Portfolio\my portfolio\ADTATEJAS\posts\my first post\BSS Data Challenge Dataset.csv")
informs <- read.csv("D://ADTA 5410 DEPLOYMENT//Portfolio//my portfolio//ADTATEJAS//posts//my first post//BSS Data Challenge Dataset.csv")
mydata <-read.csv("D://ADTA 5410 DEPLOYMENT//Portfolio//my portfolio//ADTATEJAS//posts//my first post//my portfolio data.csv", head=T)
names(mydata)
# Create a copy of mydata and call it dataUS
dataUS <- mydata
# Calculate the commuters variable
dataUS$commuters <- 100 * dataUS$CommutePublicTransport / dataUS$TotalPopulation
# Remove the CommutePublicTransport and TotalPopulation variables
dataUS <- dataUS[, !(names(dataUS) %in% c("CommutePublicTransport", "TotalPopulation"))]
# Identify the three states with the highest values of commuters
top_states <- dataUS[order(dataUS$commuters,decreasing = TRUE), ][1:3, "State"]
# Identify the three states with the lowest values of commuters
bottom_states <- dataUS[order(dataUS$commuters), ][1:3, "State"]
# Print the results
cat("Three states with the highest values of commuters:", top_states, "\n")
# Create a copy of mydata and call it dataUS
dataUS <- mydata
# Calculate the commuters variable
dataUS$commuters <- 100 * dataUS$CommutePublicTransport / dataUS$TotalPopulation
# Remove the CommutePublicTransport and TotalPopulation variables
dataUS <- dataUS[, !(names(dataUS) %in% c("CommutePublicTransport", "TotalPopulation"))]
# Identify the three states with the highest values of commuters
top_states <- dataUS[order(dataUS$commuters,decreasing = TRUE), ][1:3, "State"]
# Identify the three states with the lowest values of commuters
bottom_states <- dataUS[order(dataUS$commuters), ][1:3, "State"]
# Print the results
cat("Three states with the highest values of commuters:", top_states, "\n")
# Please provide your code for Task 2 in this code chunk
# Assuming that your data is in a data frame called dataUS
# Assuming dataUS is your dataframe
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(dataUS, -State)
# Calculate correlations
correlations <- cor(dataUS, use = "complete.obs")
# Create a dataframe with correlations with 'commuters'
cor_with_commuters <- data.frame(Variable = row.names(correlations), Correlation = correlations[, "commuters"])
# Sort by absolute correlation values
cor_with_commuters <- cor_with_commuters[order(abs(cor_with_commuters$Correlation), decreasing = TRUE), ]
# Get the variable with the highest absolute correlation
highest_corr_var <- cor_with_commuters$Variable[1]
# Generate the scatter plot
ggplot(dataUS, aes_string(x = highest_corr_var, y = "commuters")) +
geom_point(aes(color = OwnComputer < 88)) +
labs(x = highest_corr_var, y = "Commuters") +
scale_color_discrete(name = "OwnComputer < 88")
# Assuming that the data is in a data frame called dataUS
# Assuming dataUS is the dataframe
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(dataUS, -State)
# Assuming that your data is in a data frame called dataUS
# Assuming dataUS is your dataframe
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(dataUS, -State)
# Assuming that your data is in a data frame called dataUS
# Assuming dataUS is your dataframe
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(mydata, -State)
# Calculate correlations
correlations <- cor(mydata, use = "complete.obs")
# Please provide your code for Task 2 in this code chunk
# Assuming that your data is in a data frame called dataUS
# Assuming dataUS is your dataframe
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(dataUS, -State)
mydata <-read.csv("D://ADTA 5410 DEPLOYMENT//Portfolio//my portfolio//ADTATEJAS//posts//my first post//my portfolio data.csv", head=T)
names(mydata)
# Create a copy of mydata and call it dataUS
dataUS <- mydata
# Calculate the commuters variable
dataUS$commuters <- 100 * dataUS$CommutePublicTransport / dataUS$TotalPopulation
# Remove the CommutePublicTransport and TotalPopulation variables
dataUS <- dataUS[, !(names(dataUS) %in% c("CommutePublicTransport", "TotalPopulation"))]
# Identify the three states with the highest values of commuters
top_states <- dataUS[order(dataUS$commuters,decreasing = TRUE), ][1:3, "State"]
# Identify the three states with the lowest values of commuters
bottom_states <- dataUS[order(dataUS$commuters), ][1:3, "State"]
# Print the results
cat("Three states with the highest values of commuters:", top_states, "\n")
# Please provide your code for Task 2 in this code chunk
# Assuming that your data is in a data frame called dataUS
# Assuming dataUS is your dataframe
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(dataUS, -State)
# Calculate correlations
correlations <- cor(dataUS, use = "complete.obs")
# Create a dataframe with correlations with 'commuters'
cor_with_commuters <- data.frame(Variable = row.names(correlations), Correlation = correlations[, "commuters"])
# Sort by absolute correlation values
cor_with_commuters <- cor_with_commuters[order(abs(cor_with_commuters$Correlation), decreasing = TRUE), ]
# Get the variable with the highest absolute correlation
highest_corr_var <- cor_with_commuters$Variable[1]
# Generate the scatter plot
ggplot(dataUS, aes_string(x = highest_corr_var, y = "commuters")) +
geom_point(aes(color = OwnComputer < 88)) +
labs(x = highest_corr_var, y = "Commuters") +
scale_color_discrete(name = "OwnComputer < 88")
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(dataUS, -State)
library(ggplot2)
# Assuming your dataset is named 'dataUS', replace with your actual dataset name
# Fit the linear regression model with specified predictors
model1 <- lm(commuters ~ MedianAge + Income100K.150K + Income35K.50K + PovertyRate, data = dataUS)
# Interpretation of coefficient estimates excluding the intercept
coef_summary <- summary(model1)$coefficients
interpretations <- paste(
"MedianAge:", round(coef_summary["MedianAge", "Estimate"], 4),
"Income100K.150K:", round(coef_summary["Income100K.150K", "Estimate"], 4),
"Income35K.50K:", round(coef_summary["Income35K.50K", "Estimate"], 4),
"PovertyRate:", round(coef_summary["PovertyRate", "Estimate"], 4)
)
# Print one-sentence interpretations
interpretations
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(dataUS, -State)
mydata <-read.csv("D://ADTA 5410 DEPLOYMENT//Portfolio//my portfolio//ADTATEJAS//posts//my first post//my portfolio data.csv", head=T)
names(mydata)
# Create a copy of mydata and call it dataUS
dataUS <- mydata
# Calculate the commuters variable
dataUS$commuters <- 100 * dataUS$CommutePublicTransport / dataUS$TotalPopulation
# Remove the CommutePublicTransport and TotalPopulation variables
dataUS <- dataUS[, !(names(dataUS) %in% c("CommutePublicTransport", "TotalPopulation"))]
# Identify the three states with the highest values of commuters
top_states <- dataUS[order(dataUS$commuters,decreasing = TRUE), ][1:3, "State"]
# Identify the three states with the lowest values of commuters
bottom_states <- dataUS[order(dataUS$commuters), ][1:3, "State"]
# Print the results
cat("Three states with the highest values of commuters:", top_states, "\n")
library(dplyr)
library(ggplot2)
# Remove the 'State' column
dataUS <- select(dataUS, -State)
# Calculate correlations
correlations <- cor(dataUS, use = "complete.obs")
# Create a dataframe with correlations with 'commuters'
cor_with_commuters <- data.frame(Variable = row.names(correlations), Correlation = correlations[, "commuters"])
# Sort by absolute correlation values
cor_with_commuters <- cor_with_commuters[order(abs(cor_with_commuters$Correlation), decreasing = TRUE), ]
# Get the variable with the highest absolute correlation
highest_corr_var <- cor_with_commuters$Variable[1]
# Generate the scatter plot
ggplot(dataUS, aes_string(x = highest_corr_var, y = "commuters")) +
geom_point(aes(color = OwnComputer < 88)) +
labs(x = highest_corr_var, y = "Commuters") +
scale_color_discrete(name = "OwnComputer < 88")
library(ggplot2)
# Assuming your dataset is named 'dataUS', replace with your actual dataset name
# Fit the linear regression model with specified predictors
model1 <- lm(commuters ~ MedianAge + Income100K.150K + Income35K.50K + PovertyRate, data = dataUS)
# Interpretation of coefficient estimates excluding the intercept
coef_summary <- summary(model1)$coefficients
interpretations <- paste(
"MedianAge:", round(coef_summary["MedianAge", "Estimate"], 4),
"Income100K.150K:", round(coef_summary["Income100K.150K", "Estimate"], 4),
"Income35K.50K:", round(coef_summary["Income35K.50K", "Estimate"], 4),
"PovertyRate:", round(coef_summary["PovertyRate", "Estimate"], 4)
)
# Print one-sentence interpretations
interpretations
library(ggplot2)
# Assuming your dataset is named 'dataUS', replace with your actual dataset name
# Fit the linear regression model with specified predictors
model1 <- lm(commuters ~ MedianAge + Income100K.150K + Income35K.50K + PovertyRate, data = dataUS)
# Interpretation of coefficient estimates excluding the intercept
coef_summary <- summary(model1)$coefficients
interpretations <- paste(
"MedianAge:", round(coef_summary["MedianAge", "Estimate"], 4),
"Income100K.150K:", round(coef_summary["Income100K.150K", "Estimate"], 4),
"Income35K.50K:", round(coef_summary["Income35K.50K", "Estimate"], 4),
"PovertyRate:", round(coef_summary["PovertyRate", "Estimate"], 4)
)
# Print one-sentence interpretations
interpretations
# Create a scatterplot of residuals vs. fitted values
residual_plot <- ggplot(data = data.frame(Fitted = fitted(model1), Residuals = residuals(model1)), aes(x = Fitted, y = Residuals)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(x = "Fitted Values", y = "Residuals") +
ggtitle("Residuals vs. Fitted Values")
# Display the scatterplot
print(residual_plot)
library(ISLR2)
mydata <- ISLR2::Boston
model <- lm(medv ~., data=mydata)
summary(model)
View(mydata)
library(ggplot2)
# Assuming your dataset is named 'dataUS', replace with your actual dataset name
# Fit the linear regression model with specified predictors
model1 <- lm(commuters ~ MedianAge + Income100K.150K + Income35K.50K + PovertyRate, data = dataUS)
# Interpretation of coefficient estimates excluding the intercept
coef_summary <- summary(model1)$coefficients
interpretations <- paste(
"MedianAge:", round(coef_summary["MedianAge", "Estimate"], 4),
"Income100K.150K:", round(coef_summary["Income100K.150K", "Estimate"], 4),
"Income35K.50K:", round(coef_summary["Income35K.50K", "Estimate"], 4),
"PovertyRate:", round(coef_summary["PovertyRate", "Estimate"], 4)
)
# Print one-sentence interpretations
interpretations
# Create a scatterplot of residuals vs. fitted values
residual_plot <- ggplot(data = data.frame(Fitted = fitted(model1), Residuals = residuals(model1)), aes(x = Fitted, y = Residuals)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
labs(x = "Fitted Values", y = "Residuals") +
ggtitle("Residuals vs. Fitted Values")
# Display the scatterplot
print(residual_plot)
# Create a scatter plot with different colors for each variable
plot(variable1, variable2, col = as.numeric(Boston$chas), pch = 16,
main = "Scatter Plot of crim vs. medv",
xlab = "Per capita crime rate by town",
ylab = "Median value of owner-occupied homes")
# Create a scatter plot with different colors for each variable
plot(crim,medv, col = as.numeric(Boston$chas), pch = 16,
main = "Scatter Plot of crim vs. medv",
xlab = "Per capita crime rate by town",
ylab = "Median value of owner-occupied homes")
# Create a scatter plot with different colors for each variable
plot(crimtab,medv, col = as.numeric(Boston$chas), pch = 16,
main = "Scatter Plot of crim vs. medv",
xlab = "Per capita crime rate by town",
ylab = "Median value of owner-occupied homes")
# Add a legend
legend("topright", legend = levels(factor(Boston$chas)),
title = "Charles River",
col = 1:2, pch = 16, cex = 0.8)
# Create a scatter plot with different colors for each variable
plot(crimtab,medv, col = as.numeric(Boston$chas), pch = 16,
main = "Scatter Plot of crim vs. medv",
xlab = "Per capita crime rate by town",
ylab = "Median value of owner-occupied homes")
library(ggplot2)
# Create a scatter plot with different colors for crim and medv
ggplot(Boston, aes(x = crim, y = medv, color = factor(crim > median(crim)))) +
geom_point() +
scale_color_manual(values = c("blue", "red"), name = "Variable") +
labs(title = "Scatter Plot of Crim vs. Medv",
x = "Crime Rate (crim)",
y = "Median House Value (medv)")
library(ggplot2)
# Create a scatter plot with different colors for crim and medv
ggplot(Boston, aes(x = medv, y = crim, color = factor(medv > median(medv)))) +
geom_point() +
scale_color_manual(values = c("blue", "red"), name = "Variable") +
labs(title = "Scatter Plot of Medv vs. Crim",
x = "Median House Value (medv)",
y = "Crime Rate (crim)")
library(ISLR2)
mydata <- ISLR2::Boston
model <- lm(medv ~., data=mydata)
summary(model)
library(ggplot2)
# Create a scatter plot for medv and crim
ggplot(Boston, aes(x = medv, y = crim, color = factor(medv > median(medv)))) +
geom_point() +
scale_color_manual(values = c("blue", "red"), name = "Variable") +
labs(title = "Scatter Plot of Medv vs. Crim",
x = "Median House Value (medv)",
y = "Crime Rate (crim)")
