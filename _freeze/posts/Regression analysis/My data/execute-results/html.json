{
  "hash": "185449c4c16e3a5e5a0353fac2779356",
  "result": {
    "markdown": "---\ntitle: \"Stepwise Regression\"\nauthor: \"Tejaskumar Patel\"\ndate: \"2023-12-14\"\noutput: \n  quarto::html_document:\n    theme: \"yeti\"\n    df_print: kable\n    highlight: pygments\n    code_folding: show\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n# Slide 1: Plan for today\n\n-   Data Splitting\n\n-   Choosing best model among different alternatives\n\n-   Forward/Backward Selection methods\n\n-   Best Subset model\n\n# Slide 2: Dataset from ISLR2\n\n-   Let's first load a dataset from the `ISLR2` package.\n\n-   Check the data structure and dimension of the data\n\n-   How many\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR2)\nlibrary(leaps)\n\ndf<-ISLR2::Auto\n```\n:::\n\n\n# Slide 3: Data split\n\nWe will explore the variables in the dataset to choose the best\npredictors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshuffleid = sample(nrow(df), 0.2 * nrow(df))\ntestData = df[shuffleid, ]\ntrainData = df[-shuffleid, ]\n```\n:::\n\n\n# Slide 4: Single Variable Models\n\n-   Run a linear model with only one predictor to model `mpg`\n\n-   Which predictor gives the highest possible adjusted R square value\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_adj_r_squared_simple <- function(data, dependent_var, predictor_var) {\n  formula_string <- paste(dependent_var, \"~\", predictor_var)\n  model <- lm(formula_string, data = data)\n  adj_r_squared <- summary(model)$adj.r.squared\n  return(adj_r_squared)\n}\n```\n:::\n\n\n# Slide 5: Forward Selection\n\n-   Forward selection starts with an empty model\n\n-   Iteratively adds predictors to improve the model\n\n-   Stops when addition of predictors does not significantly improve the\n    model\n\n# \n\nSlide 6: Forward Selection Algorithm\n\n-   Start with a null model (no predictors)\n\n-   Fit p simple linear models and add the variable with the smallest\n    RSS\n\n-   Continue adding variables, one at a time, that give the smallest RSS\n\n-   Stop when no variables improve the model beyond a threshold\n\n-   Criterion: cross validated prediction error, AIC, BIC, or adjusted R\n    square\n\n# Slide 7: Forward Selection Practice\n\nUse the step function in stats package and run a forward stepwise\nregression on **trainingset** and name your model **model_forward**. If\nwe use AIC information criteria, which variables are selected based on\nmodel_forward?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_model <- lm(mpg~ 1, data=trainData)\n#largest model\nmyfullmodel<-lm(mpg~.-name , data=trainData)\n\n# Run the forward stepwise regression. \nmodel_forward <-\n  step(min_model,direction=\"forward\", scope=formula(myfullmodel),\n  trace = 1 , criterion = \"AIC\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nStart:  AIC=1284.61\nmpg ~ 1\n\n               Df Sum of Sq     RSS     AIC\n+ weight        1   12680.0  5979.8  929.28\n+ displacement  1   11881.0  6778.8  968.66\n+ cylinders     1   11226.7  7433.1  997.59\n+ horsepower    1   11046.7  7613.2 1005.11\n+ year          1    6284.3 12375.5 1157.66\n+ origin        1    5362.4 13297.4 1180.22\n+ acceleration  1    3291.4 15368.4 1225.67\n<none>                      18659.8 1284.61\n\nStep:  AIC=929.28\nmpg ~ weight\n\n               Df Sum of Sq    RSS    AIC\n+ year          1   2340.06 3639.8 775.39\n+ horsepower    1    278.55 5701.3 916.30\n+ origin        1    177.29 5802.5 921.83\n+ displacement  1    144.97 5834.8 923.57\n+ cylinders     1    120.56 5859.3 924.89\n+ acceleration  1     97.63 5882.2 926.11\n<none>                      5979.8 929.28\n\nStep:  AIC=775.39\nmpg ~ weight + year\n\n               Df Sum of Sq    RSS    AIC\n+ origin        1   145.162 3494.6 764.61\n<none>                      3639.8 775.39\n+ cylinders     1     4.842 3634.9 776.97\n+ horsepower    1     4.159 3635.6 777.03\n+ displacement  1     1.666 3638.1 777.24\n+ acceleration  1     1.177 3638.6 777.29\n\nStep:  AIC=764.61\nmpg ~ weight + year + origin\n\n               Df Sum of Sq    RSS    AIC\n<none>                      3494.6 764.61\n+ displacement  1   17.9854 3476.6 764.99\n+ horsepower    1   12.8312 3481.8 765.45\n+ acceleration  1    3.1855 3491.4 766.32\n+ cylinders     1    0.7779 3493.8 766.54\n```\n:::\n\n```{.r .cell-code}\nmodel_forward$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)        weight          year        origin \n-17.152695848  -0.006183903   0.754576716   1.018373278 \n```\n:::\n:::\n\n\n## \n\n# Slide 8: Backward Selection Practice\n\n-   Starts with a full model with all predictors\n\n-   Iteratively removes predictors to simplify the model\n\n-   Stops when removal of predictors significantly worsens the model\n\n# \n\nSlide 9: Backward Selection Practice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_model <- lm(mpg~ 1, data=trainData)\n#largest model\nmyfullmodel<-lm(mpg~.-name , data=trainData)\n\nn=nrow(trainData)\n\n# Run the forward stepwise regression. \nmodel_backward <-\n  step(myfullmodel,direction=\"backward\", scope=formula(myfullmodel),\n  trace = 1, criterion = \"AIC\" )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nStart:  AIC=762.66\nmpg ~ (cylinders + displacement + horsepower + weight + acceleration + \n    year + origin + name) - name\n\n               Df Sum of Sq    RSS    AIC\n- acceleration  1      0.70 3386.3 760.73\n<none>                      3385.7 762.66\n- cylinders     1     41.01 3426.7 764.44\n- horsepower    1     43.39 3429.0 764.66\n- displacement  1     94.73 3480.4 769.33\n- origin        1    220.48 3606.1 780.47\n- weight        1    873.92 4259.6 832.76\n- year          1   2015.18 5400.8 907.30\n\nStep:  AIC=760.73\nmpg ~ cylinders + displacement + horsepower + weight + year + \n    origin\n\n               Df Sum of Sq    RSS    AIC\n<none>                      3386.3 760.73\n- cylinders     1     40.43 3426.8 762.45\n- horsepower    1     61.82 3448.2 764.41\n- displacement  1     95.38 3481.7 767.45\n- origin        1    220.15 3606.5 778.50\n- weight        1   1120.64 4507.0 848.49\n- year          1   2034.92 5421.3 906.49\n```\n:::\n\n```{.r .cell-code}\nmodel_backward$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n (Intercept)    cylinders displacement   horsepower       weight         year \n-14.56286014  -0.69346581   0.02473438  -0.02938393  -0.00644805   0.75089518 \n      origin \n  1.35637327 \n```\n:::\n:::\n\n\n## \n\n# Slide 10: Best Subset model\n\n-   Method that considers all possible subsets of predictors\n\n-   Chooses the model that gives the best performance based on a\n    criterion (e.g., AIC, BIC, Adjusted R2)\n\n# Slide 11: leaps package\n\n-   Use leaps function in the leaps library in R to compare all possible\n    models and decide on the best model by using Adjusted R-squared\n    criteria\n\n-   The leaps function in R can help you to construct a table indicating\n    the variables included in the best model of each size (p=1,p=2,...,\n    p=16) and the corresponding Adjusted R-squared value.\n\n# Slide 12: best subset in practice\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_names = names(trainData)[-c(1, 9)]\n\n\n\noutadjr2 = leaps(trainData[,-c(1, 9)], trainData$mpg, method = \"adjr2\", nbest=1, names = col_names)\n\n# Get the index of the best model\nbestmodelR2 = which(outadjr2$adjr2==max(outadjr2$adjr2))\n# Extract the coefficients of the best model\nbest.R2 = cbind(as.matrix(outadjr2$which),outadjr2$adjr2)[bestmodelR2,]\n# Set the names of the best row \nnames(best.R2) = c(names(trainData[,-c(1, 9)]),\"adjr2\")\n# Show the best row with the selected predictors\nbest.R2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   cylinders displacement   horsepower       weight acceleration         year \n   1.0000000    1.0000000    1.0000000    1.0000000    0.0000000    1.0000000 \n      origin        adjr2 \n   1.0000000    0.8149753 \n```\n:::\n:::\n\n\n# Slide 13: Prediction on a new dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nforward_fitted<- predict(model_forward, newdata=testData)\n\nRMSE_forward<-sqrt(mean((testData$mpg-forward_fitted)^2))\n\nbackward_fitted<- predict(model_backward, newdata=testData)\n\nRMSE_backward<-sqrt(mean((testData$mpg-backward_fitted)^2))\n\n\n\nlibrary(Metrics)\nrmse(testData$mpg, forward_fitted)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.324726\n```\n:::\n:::\n\n\n# Slide 14: Practice\n\n-   Predict MSPE on testData based on the best model selected by Best\n    subset model\n\n# \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}